buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.16.1"
	}

}

plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.jfrog.artifactory' version '4.16.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	compile 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
	//implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	/*implementation 'io.zipkin.java:zipkin-server:2.12.9'{
       //exclude 'org.slf4j'
       exclude  'org.slf4j:slf4j-api'
   }*/
	//runtime 'io.zipkin.java:zipkin-autoconfigure-ui:2.12.9'
	//compileOnly 'org.projectlombok:lombok:1.18.8'
	//annotationProcessor 'org.projectlombok:lombok:1.18.8'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
/*
configurations {

	all {
		exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	}
}
*/
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.RELEASE"
	}
}

test {
	useJUnitPlatform()
}

artifactory {
	contextUrl = "${artifactory_url}"   //The base Artifactory URL if not overridden by the publisher/resolver
	publish {
		repository {
			repoKey = 'gradle-dev-local'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true

		}
		defaults {
			publishConfigs('archives', 'published')
			publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
			publishArtifacts = true
		}
	}
	resolve {
		repository {
			repoKey = 'gradle-dev'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true

		}
	}

}
